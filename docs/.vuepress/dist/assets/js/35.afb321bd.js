(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{557:function(t,a,s){"use strict";s.r(a);var e=s(8),r=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"pointer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pointer","aria-hidden":"true"}},[t._v("#")]),t._v(" Pointer")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("overview")]),t._v(" "),s("p",[t._v("本章节启发自 《C 程序设计新思维》 中的指针章节")])]),t._v(" "),s("h2",{attrs:{id:"questions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#questions","aria-hidden":"true"}},[t._v("#")]),t._v(" Questions")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("复制和别名有什么区别？")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/chenweigao/_code/blob/master/cpp/pointer_array_3.cpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例代码"),s("OutboundLink")],1),t._v(" 可以看出，对于数组结构的赋值其实是创建了数组的一个别名，当复制被修改时，原数据也别修改。")]),t._v(" "),s("p",[t._v("如果要复制一个数组，应当使用已经过时的 "),s("code",[t._v("memmove")])])]),t._v(" "),s("li",[s("p",[t._v("如何在 C 中返回多个数据项？")]),t._v(" "),s("p",[t._v("A：可以使用随用随弃的结构体。"),s("a",{attrs:{href:"https://github.com/chenweigao/_code/blob/master/cpp/pointer_array_1.cpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例代码"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[t._v("数组可否在运行时动态分配内存空间？")]),t._v(" "),s("p",[t._v("可以，参考问题 5。")])]),t._v(" "),s("li",[s("p",[t._v("如何理解函数堆栈？")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("使用 "),s("code",[t._v("malloc")]),t._v(" 分配的内存并不位于栈中，而是在系统中称为堆的空间中")])]),t._v(" "),s("li",[s("p",[t._v("函数帧：函数在内存中占据的空间，用于保存与这个函数有关的信息")])])])]),t._v(" "),s("li",[s("p",[t._v("如何区分自动、静态和手工内存的区别？")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("自动：很常见；如果不使用 "),s("code",[t._v("static")]),t._v(" 关键字，在函数内部声明的所有变量都是自动变量；离开自己的作用域之后被销毁；可以在初始化时设置非常量值；")])]),t._v(" "),s("li",[s("p",[t._v("在函数外部和函数内部使用 "),s("code",[t._v("static")]),t._v(" 关键字初始化的变量都是静态变量；注意静态变量数据是在 main 函数启动之前被初始化的，因此所有初始化值都必须是"),s("strong",[t._v("常量")]),t._v("，并且"),s("strong",[t._v("不需要计算")]),t._v("；在启动时设置为 0;")])]),t._v(" "),s("li",[s("p",[t._v("手工内存：涉及到 "),s("code",[t._v("malloc")]),t._v(" 和 "),s("code",[t._v("free")]),t._v(" 函数；程序员痛苦的根源；可以在"),s("strong",[t._v("运行时设置数组长度")]),t._v("，可以"),s("strong",[t._v("改变长度")]),t._v("，不能使用 "),s("code",[t._v("sizeof")]),t._v(" 计算数组长度。")])])])])]),t._v(" "),s("h2",{attrs:{id:"pointer-and-array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pointer-and-array","aria-hidden":"true"}},[t._v("#")]),t._v(" pointer and array")]),t._v(" "),s("p",[t._v("意识到数组和指针其密不可分的关系，参考"),s("a",{attrs:{href:"https://github.com/chenweigao/_code/blob/master/cpp/pointer_array_2.cpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例代码2"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("第 6 行体现了将成员 1 的地址取得，而后赋值给新指针，新数组可以包含 "),s("code",[t._v("{2, 4, 6, 8}")]),t._v(", 并通过下标访问。")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Question")]),t._v(" "),s("p",[t._v("What is difference between "),s("code",[t._v("int an_array[]")]),t._v(" and "),s("code",[t._v("int *a_pointer")]),t._v(" ?")])]),t._v(" "),s("p",[t._v("对于此问题，先研究 "),s("code",[t._v("int an_array[32]")]),t._v(" 执行后会发生什么：")]),t._v(" "),s("ol",[s("li",[t._v("在栈上分配空间，足够容纳 32 个整数；")]),t._v(" "),s("li",[t._v("把 "),s("code",[t._v("an_array")]),t._v(" 看做一个指针；")]),t._v(" "),s("li",[t._v("把这个指针和新分配的地址"),s("strong",[t._v("绑定")]),t._v("。")])]),t._v(" "),s("p",[t._v("但是当程序在代码中遇到 "),s("code",[t._v("int *a_pointer")]),t._v(" 的时候，只会做一件事：")]),t._v(" "),s("p",[s("strong",[t._v("把 "),s("code",[t._v("a_pointer")]),t._v(" 声明为指针。")])]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("a_pointer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("malloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na_pointer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" an_array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("都是被允许的。")]),t._v(" "),s("h2",{attrs:{id:"pointer-and-const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pointer-and-const","aria-hidden":"true"}},[t._v("#")]),t._v(" pointer and const")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",[t._v("与引用一样，也可以令指针指向常量或非常量；"),s("strong",[t._v("指向常量的指针 pointer to const")]),t._v(" 不能用于改变其所指对象的值。")])]),t._v(" "),s("p",[t._v("想要存放常量对象的地址，只能使用指向常量的指针：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ptr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("pi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// wrong!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cptr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("pi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// right!")]),t._v("\n")])])])])},[],!1,null,null,null);a.default=r.exports}}]);