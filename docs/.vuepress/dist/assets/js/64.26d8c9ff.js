(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{516:function(_,v,t){"use strict";t.r(v);var e=t(8),a=Object(e.a)({},function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"thread-and-process"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#thread-and-process","aria-hidden":"true"}},[_._v("#")]),_._v(" Thread and Process")]),_._v(" "),t("p",[_._v("回答面试中进程和线程的问题：")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("进程")]),_._v(" "),t("p",[_._v("进程是程序的一次执行过程，是一个动态概念，是程序在执行过程中分配和管理资源的基本单位，每一个进程都有自己的一个地址空间，至少有 5 种基本状态，他们分别是：初始态，就绪态，执行态，等待态，终止态。")])]),_._v(" "),t("li",[t("p",[_._v("线程")]),_._v(" "),t("p",[_._v("线程是 CPU 调度和分派的基本单位，它可以与同属一个进程的其他线程共享进程所拥有的全部资源。")])]),_._v(" "),t("li",[t("p",[_._v("联系")]),_._v(" "),t("p",[_._v("线程是进程的一部分，一个线程只能属于一个进程，而一个进程可以有多个线程，但至少有一个线程。")])]),_._v(" "),t("li",[t("p",[_._v("区别")]),_._v(" "),t("p",[_._v("根本区别：进程是操作系统资源分配的基本单位，而线程是任务调度和执行的基本单位。")]),_._v(" "),t("p",[_._v("开销方面：每个进程都有独立的代码和数据空间（进程上下文），程序之间切换会有较大的开销；线程可以看做轻量级的进程，同一类线程共享代码和数据空间，每一个线程都有自己独立的 "),t("strong",[_._v("运行栈")]),_._v(" 和 "),t("strong",[_._v("程序计数器（PC）")]),_._v("，线程之间的切换开销小。")]),_._v(" "),t("p",[_._v("内存分配：系统在运行时为每个进程分配不同的内存空间；而对线程而言，除了 CPU 外，系统不会为线程分配内存，线程组之间只能共享资源。")]),_._v(" "),t("p",[_._v("包含关系：没有线程的进程可以看做是单线程的，如果一个进程内有多个线程，则执行过程是多个线程共同完成的；线程是进程的一部分，所以线程也被成为轻量级进程。")])]),_._v(" "),t("li",[t("p",[_._v("并发和隔离")]),_._v(" "),t("p",[_._v("操作系统中有两个重要的概念：并发和隔离。")]),_._v(" "),t("p",[_._v("并发是为了尽量让硬件利用率高，线程是为了在系统层面做到并发，线程上下文切换效率比进程上下文切换效率高很多，这样可以提高并发效率。")]),_._v(" "),t("p",[_._v("隔离是并发以后要解决的重要问题，计算机的资源一般是共享的，隔离能保障资源的回收，不影响其他代码的使用。")])])]),_._v(" "),t("h2",{attrs:{id:"多进程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多进程","aria-hidden":"true"}},[_._v("#")]),_._v(" 多进程")]),_._v(" "),t("p",[_._v("程序运行时操作系统会创建一个进程，并为它分配资源，然后把该进程放入就绪队列，进程调取器选中的话就为该进程分配 CPU 时间，程序真正开始运行。")]),_._v(" "),t("p",[_._v("Linux使用 "),t("code",[_._v("fork()")]),_._v(" 来创建子进程，其返回值的含义是：")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("负数：创建子进程失败")])]),_._v(" "),t("li",[t("p",[_._v("0： 返回在子进程中")])]),_._v(" "),t("li",[t("p",[_._v("正数：返回在父进程中，该正数为新创建的子进程的 pid")])])]),_._v(" "),t("p",[_._v("注意子进程结束时，父进程应当回收子进程，不然子进程会变成僵尸进程。")]),_._v(" "),t("p",[_._v("Linux 下查看僵尸进程使用 "),t("code",[_._v("top")]),_._v(" 命令，其中的 "),t("code",[_._v("zombie")]),_._v(" 前的数量就代表僵尸进程的数量。")]),_._v(" "),t("p",[_._v("问题：连续调用三次 "),t("code",[_._v("fork()")]),_._v(", 会返回几个进程？")]),_._v(" "),t("p",[_._v("答：2^3 个。")]),_._v(" "),t("p",[_._v("多进程相比于多线程而言更加健壮，因为多线程程序只要有一个线程奔溃，整个进程也会奔溃，而一个进程奔溃并不会对另一个进程造成影响，因为进程拥有自己的地址空间。")]),_._v(" "),t("h2",{attrs:{id:"进程间通信"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程间通信","aria-hidden":"true"}},[_._v("#")]),_._v(" 进程间通信")]),_._v(" "),t("p",[_._v("进程间通信（IPC）的方式包括：信号，管道，共享内存，消息队列，信号量，封装的有 TCP/IP 套接字。")]),_._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/chenweigao/multi_thread_and_process",target:"_blank",rel:"noopener noreferrer"}},[_._v("代码实现可以参考 GitHub"),t("OutboundLink")],1)]),_._v(" "),t("h3",{attrs:{id:"命名管道-fifo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命名管道-fifo","aria-hidden":"true"}},[_._v("#")]),_._v(" 命名管道 FIFO")]),_._v(" "),t("p",[_._v("用到 "),t("code",[_._v("sys/stat.h")]),_._v(", "),t("code",[_._v("unistd.h")]),_._v(", "),t("code",[_._v("linux/stat.h")]),_._v(" 等头文件。")]),_._v(" "),t("p",[_._v("命名管道变编程使用 "),t("code",[_._v("FILE")]),_._v(" 对象，和文件读写的操作很相似，创建 FIFO 使用：")]),_._v(" "),t("p",[t("code",[_._v("mkfifo(FIFO_FILE, 0666)")]),_._v(":")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("FIFO_FILR 为宏定义的文件名："),t("code",[_._v('#define FIFO_FILE "MYFIFO"')])])]),_._v(" "),t("li",[t("p",[_._v("返回值小于 0 则说明命名管道存在")])]),_._v(" "),t("li",[t("p",[_._v("返回值大于 0 则说明创建命名管道成功")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("0666")]),_._v(" 代表权限。在此对权限进行以下说明：")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"center"}},[_._v("读")]),_._v(" "),t("th",{staticStyle:{"text-align":"center"}},[_._v("写")]),_._v(" "),t("th",{staticStyle:{"text-align":"center"}},[_._v("执行")])])]),_._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"center"}},[_._v("4")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("2")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("1")])])])]),_._v(" "),t("p",[_._v("从表格中可以看出， "),t("code",[_._v("6")]),_._v("  代表的含义为 4 + 2, 为读和写。四位数字代表特殊权限位，拥有者位，同组用户位，其余用户位。")])])]),_._v(" "),t("p",[_._v("要进行命名管道的通信，则使用一个 buff 读取文件指针，例如：")]),_._v(" "),t("p",[t("code",[_._v('FILE* fp = fopen(FIFO_FILE, "r")')]),_._v(" 打开命名管道；")]),_._v(" "),t("p",[t("code",[_._v("fgets(readbuf, 80, fp)")]),_._v(" 读取命名管道，相应的，可以使用 "),t("code",[_._v("fputs()")]),_._v(" 写入命名管道。")]),_._v(" "),t("h3",{attrs:{id:"ipc-消息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ipc-消息","aria-hidden":"true"}},[_._v("#")]),_._v(" IPC 消息")]),_._v(" "),t("p",[_._v("用到 "),t("code",[_._v("sys/ipc.h")]),_._v(", "),t("code",[_._v("sys/msg.h")]),_._v(" 等头文件。")]),_._v(" "),t("p",[_._v("创建一个 ipc 消息的方式一般为：")]),_._v(" "),t("p",[t("code",[_._v("int msgid = msgget((key_t)1234, 0666|IPC_CREAT);")])]),_._v(" "),t("p",[_._v("返回值说明如下：")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("返回 -1：创建失败")])]),_._v(" "),t("li",[t("p",[_._v("否则，成功创建，该消息的 id 为 1234")])])]),_._v(" "),t("p",[_._v("接收和发送消息使用：")]),_._v(" "),t("ul",[t("li",[t("p",[t("code",[_._v("msgrcv(msgid, data, BUFSIZE, 0, 0)")]),_._v(": 返回 -1 则失败，否则接收到消息值 data.")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("msgsnd(msgid, data, BUFSIZE, 0)")]),_._v(": 返回 -1 则失败，否则发送消息。")])])]),_._v(" "),t("h3",{attrs:{id:"共享内存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#共享内存","aria-hidden":"true"}},[_._v("#")]),_._v(" 共享内存")]),_._v(" "),t("p",[_._v("用到 "),t("code",[_._v("sys/ipc.h")]),_._v(", "),t("code",[_._v("sys/shm.h")]),_._v(" 头文件。")]),_._v(" "),t("p",[_._v("创建一个共享内存的方式一般如下：")]),_._v(" "),t("p",[t("code",[_._v("int shmid = shmget((key_t)1234, 256, 0666|IPC_CREAT)")]),_._v(":")]),_._v(" "),t("ul",[t("li",[_._v("返回负数："),t("code",[_._v("shmget")]),_._v(" 失败")])]),_._v(" "),t("p",[t("code",[_._v("char *shmptr = shmat(shmid, 0, 0)")]),_._v(":")]),_._v(" "),t("ul",[t("li",[_._v("返回 -1：失败")])]),_._v(" "),t("p",[_._v("然后使用 "),t("code",[_._v("strcpy")]),_._v(" 将 "),t("code",[_._v("shmptr")]),_._v(" 拷贝出来或者拷贝出去：")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("write: "),t("code",[_._v("strcpy(shmptr, char* text)")])])]),_._v(" "),t("li",[t("p",[_._v("read: "),t("code",[_._v("strcpy(buf, shmptr)")])])])])])},[],!1,null,null,null);v.default=a.exports}}]);