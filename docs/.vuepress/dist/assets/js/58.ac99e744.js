(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{564:function(t,v,_){"use strict";_.r(v);var a=_(8),r=Object(a.a)({},function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"problems-in-interview"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#problems-in-interview","aria-hidden":"true"}},[t._v("#")]),t._v(" Problems in Interview")]),t._v(" "),_("h2",{attrs:{id:"data-struct"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#data-struct","aria-hidden":"true"}},[t._v("#")]),t._v(" Data Struct")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("堆和栈的区别")]),t._v(" "),_("p",[t._v("栈静态内存分配，堆动态内存分配，都存储于 RAM 中；")]),t._v(" "),_("p",[t._v("栈中的变量直接存储于内存中，所以访问很快，它的内存分配是在程序编译的时候处理的；堆中的变量在程序运行时分配内存，访问这个内存会稍慢一些，但是堆的大小限制只取决于虚拟内存的大小。")]),t._v(" "),_("p",[t._v("栈总是遵循先进后出的原则，最近保存的元素总可以最先被释放，这使得从栈中释放一个元素或者块非常容易；堆没有先进先出的原则，可以在任何时候释放任何元素或者块，每个堆中的元素之间都没有依赖关系，可以在任何时候随机访问。")]),t._v(" "),_("p",[t._v("在知道元素的个数这种情况下，分配栈；相反分配堆。")])]),t._v(" "),_("li",[_("p",[t._v("手写链表")]),t._v(" "),_("p",[t._v("注意手写链表的时候两个要点：")]),t._v(" "),_("ul",[_("li",[t._v("自定义一个 Node Class")]),t._v(" "),_("li",[t._v("链表的遍历使用一个 cur 指针，初试令其指向 head 头结点")])])]),t._v(" "),_("li",[_("p",[t._v("如何判断链表两个链表相交？"),_("router-link",{attrs:{to:"/blog/Backend/leetcode_problem.html#intersection-of-linked-list"}},[t._v("参考博客解释")])],1),t._v(" "),_("ol",[_("li",[t._v("快慢指针判断链表有环")]),t._v(" "),_("li",[t._v("同时遍历两个链表，如果到链表结束，则将指针指向另一个链表，遍历直到两个移动的指针相等")])]),t._v(" "),_("p",[t._v("扩展问题：如何找出一个有环链表中的环的起始节点？")]),t._v(" "),_("p",[t._v("使用快慢指针，如果有环，快慢指针相遇的位置距离环的位置等于头节点到环的位置。")])]),t._v(" "),_("li",[_("p",[t._v("已知一个栈的入栈序列，判断另一个序列是否为合法的出栈序列")])]),t._v(" "),_("li",[_("p",[t._v("什么是红黑树？")])])]),t._v(" "),_("h2",{attrs:{id:"os"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#os","aria-hidden":"true"}},[t._v("#")]),t._v(" OS")]),t._v(" "),_("ol",[_("li",[t._v("熟悉哪些 Linux 指令")])]),t._v(" "),_("h2",{attrs:{id:"networks"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#networks","aria-hidden":"true"}},[t._v("#")]),t._v(" Networks")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("报文和帧的区别")])]),t._v(" "),_("li",[_("p",[t._v("ipv4 和 ipv6 的区别")])]),t._v(" "),_("li",[_("p",[t._v("TCP/IP 模型")])])]),t._v(" "),_("h2",{attrs:{id:"iq-test"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#iq-test","aria-hidden":"true"}},[t._v("#")]),t._v(" IQ Test")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("找出重量和其他 99 个不同的 1 个乒乓球")])]),t._v(" "),_("li",[_("p",[t._v("1000 只药水，1瓶是毒药，服用后一小时毒发，毒药可以无限稀释，一小时内用几只小白鼠能找到解药？")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/24375080",target:"_blank",rel:"noopener noreferrer"}},[t._v("知乎回答"),_("OutboundLink")],1),t._v(" log1000 = 10")])]),t._v(" "),_("li",[_("p",[t._v("HTTP 和 HTTPS 的区别")]),t._v(" "),_("p",[_("strong",[t._v("HTTP + 加密 + 认证 + 完整性保护 = HTTPS")])])])]),t._v(" "),_("h2",{attrs:{id:"后台问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#后台问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 后台问题")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("进程和线程是什么，进程和线程的区别")])]),t._v(" "),_("li",[_("p",[t._v("I/O 模型是什么")])]),t._v(" "),_("li",[_("p",[t._v("解释一下多进程")]),t._v(" "),_("p",[t._v("fork 方式")])]),t._v(" "),_("li",[_("p",[t._v("进程间通信？")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("信号量")])]),t._v(" "),_("li",[_("p",[t._v("共享内存")])]),t._v(" "),_("li",[_("p",[t._v("管道")])])])])]),t._v(" "),_("h2",{attrs:{id:"database"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#database","aria-hidden":"true"}},[t._v("#")]),t._v(" DataBase")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("MongoDB 的 _id 如何保持其唯一性？")]),t._v(" "),_("p",[t._v("_id 类型为 ObjectId, 是一个 "),_("strong",[t._v("12 字节")]),t._v("的 BSON 类型字符串，按照字节顺序，依次代表：")]),t._v(" "),_("p",[t._v("4字节：UNIX 时间戳\n3字节：表示运行 MongoDB 的机器\n2字节：表示生成此 _id 的进程\n3字节：由一个随机开始的计数器生成的值")])]),t._v(" "),_("li",[_("p",[t._v("MongoDB 分页查询")])])])])},[],!1,null,null,null);v.default=r.exports}}]);